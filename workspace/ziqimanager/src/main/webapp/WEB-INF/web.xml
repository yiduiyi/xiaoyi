<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>manager</display-name>

	<!-- 加载spring与mybatis的整合配置,默认配置在WEB-INF目录下 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring-mybatis.xml</param-value>
	</context-param>

	<!-- Spring配置 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Spring MVC配置 -->
	<servlet>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 可以自定义servlet.xml配置文件的位置和名称，默认为WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，如spring-servlet.xml -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<!-- Servlet 微信Token验证 -->
	<servlet>
		<servlet-name>WechatCallbackApi</servlet-name>
		<servlet-class>com.xiaoyi.common.servlets.WechatCallbackApi</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>WechatCallbackApi</servlet-name>
		<url-pattern>/WechatCallbackApi</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 中文过滤器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 用户登录权限验证 -->
	<filter>
		<filter-name>UserIdentiftyFilter</filter-name>
		<filter-class>com.xiaoyi.common.filter.UserIdentiftyFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>UserIdentiftyFilter</filter-name>
		<url-pattern>/xiaoyi/teacher/*</url-pattern>
	</filter-mapping>
	
	<!-- 防止Spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- 设置回话时长 -->
	<session-config>
		<session-timeout>20</session-timeout>
	</session-config>
	<!-- session过滤器配置相关 -->
	<filter>
		<filter-name>SessionFilter</filter-name>
		<filter-class>com.xiaoyi.common.filter.SessionFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
		<!-- 核心业务代码需要登录校验 -->
		<url-pattern>/*</url-pattern>
		<dispatcher>FORWARD</dispatcher>
		<!-- 在这种情况下，如果请求是以/core/…开头的，并且是通过request
		dispatcher的forward方法传递过来或者直接从客户端传递过来的，则必须经过这个过滤器。 -->
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	<error-page>
		<error-code>404</error-code>
		<location>/index.html</location>
	</error-page>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:config/log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>6000</param-value>
	</context-param>

	<context-param>
		<param-name>spring.profiles.active</param-name>
		<param-value>dev</param-value>
	</context-param>
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>dev</param-value>
	</context-param>
	<context-param>
		<param-name>spring.liveBeansView.mbeanDomain</param-name>
		<param-value>dev</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
</web-app>