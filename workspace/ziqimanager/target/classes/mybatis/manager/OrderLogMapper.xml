<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyi.manager.dao.IOrderLogDao">
  <resultMap id="BaseResultMap" type="com.xiaoyi.manager.domain.OrderLog">
    <id column="order_log_id" jdbcType="VARCHAR" property="orderLogId" />
    <result column="wx_openid" jdbcType="VARCHAR" property="wxOpenid" />
    <result column="xiaoe_resource_id" jdbcType="VARCHAR" property="xiaoeResourceId" />
    <result column="xiaoe_order_id" jdbcType="VARCHAR" property="xiaoeOrderId" />
    <result column="xiaoe_user_id" jdbcType="VARCHAR" property="xiaoeUserId" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="order_state" jdbcType="INTEGER" property="orderState" />
    <result column="payment_type" jdbcType="INTEGER" property="paymentType" />
    <result column="resource_type" jdbcType="INTEGER" property="resourceType" />
    <result column="created_at" jdbcType="VARCHAR" property="createdAt" />
  </resultMap>
  <sql id="Base_Column_List">
    order_log_id, wx_openid, xiaoe_resource_id, xiaoe_order_id, xiaoe_user_id, price, 
    title, order_state, payment_type, resource_type, created_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_log
    where order_log_id = #{orderLogId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order_log
    where order_log_id = #{orderLogId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiaoyi.manager.domain.OrderLog">
    insert into order_log (order_log_id, wx_openid, xiaoe_resource_id, 
      xiaoe_order_id, xiaoe_user_id, price, 
      title, order_state, payment_type, 
      resource_type, created_at)
    values (#{orderLogId,jdbcType=VARCHAR}, #{wxOpenid,jdbcType=VARCHAR}, #{xiaoeResourceId,jdbcType=VARCHAR}, 
      #{xiaoeOrderId,jdbcType=VARCHAR}, #{xiaoeUserId,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, 
      #{title,jdbcType=VARCHAR}, #{orderState,jdbcType=INTEGER}, #{paymentType,jdbcType=INTEGER}, 
      #{resourceType,jdbcType=INTEGER}, #{createdAt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyi.manager.domain.OrderLog">
    insert into order_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderLogId != null">
        order_log_id,
      </if>
      <if test="wxOpenid != null">
        wx_openid,
      </if>
      <if test="xiaoeResourceId != null">
        xiaoe_resource_id,
      </if>
      <if test="xiaoeOrderId != null">
        xiaoe_order_id,
      </if>
      <if test="xiaoeUserId != null">
        xiaoe_user_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="orderState != null">
        order_state,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderLogId != null">
        #{orderLogId,jdbcType=VARCHAR},
      </if>
      <if test="wxOpenid != null">
        #{wxOpenid,jdbcType=VARCHAR},
      </if>
      <if test="xiaoeResourceId != null">
        #{xiaoeResourceId,jdbcType=VARCHAR},
      </if>
      <if test="xiaoeOrderId != null">
        #{xiaoeOrderId,jdbcType=VARCHAR},
      </if>
      <if test="xiaoeUserId != null">
        #{xiaoeUserId,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        #{orderState,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.manager.domain.OrderLog">
    update order_log
    <set>
      <if test="wxOpenid != null">
        wx_openid = #{wxOpenid,jdbcType=VARCHAR},
      </if>
      <if test="xiaoeResourceId != null">
        xiaoe_resource_id = #{xiaoeResourceId,jdbcType=VARCHAR},
      </if>
      <if test="xiaoeOrderId != null">
        xiaoe_order_id = #{xiaoeOrderId,jdbcType=VARCHAR},
      </if>
      <if test="xiaoeUserId != null">
        xiaoe_user_id = #{xiaoeUserId,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        order_state = #{orderState,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=VARCHAR},
      </if>
    </set>
    where order_log_id = #{orderLogId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyi.manager.domain.OrderLog">
    update order_log
    set wx_openid = #{wxOpenid,jdbcType=VARCHAR},
      xiaoe_resource_id = #{xiaoeResourceId,jdbcType=VARCHAR},
      xiaoe_order_id = #{xiaoeOrderId,jdbcType=VARCHAR},
      xiaoe_user_id = #{xiaoeUserId,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      title = #{title,jdbcType=VARCHAR},
      order_state = #{orderState,jdbcType=INTEGER},
      payment_type = #{paymentType,jdbcType=INTEGER},
      resource_type = #{resourceType,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=VARCHAR}
    where order_log_id = #{orderLogId,jdbcType=VARCHAR}
  </update>
  <select id="getOrderLogList" parameterType="hashmap" resultType="com.alibaba.fastjson.JSONObject">
  	SELECT OL.order_log_id AS orderLogId,U.wx_openid AS wxOpenId,OL.created_at AS createAt,U.wx_head_image AS headIamge,
  	U.wx_nickname AS wxNickName,OL.price AS price FROM order_log OL LEFT JOIN `user` U ON OL.wx_openid = U.wx_openid 
  	<where>
  		<if test="wxOpenId != null">
  			AND OL.wx_openid = #{wxOpenId}
  		</if>
  		<if test="wxNickName != null">
  			AND U.wx_nickname LIKE CONCAT('%',#{wxNickName},'%')
  		</if>
  		<if test="startTime != null">
  			AND OL.created_at &gt;= #{startTime}
  		</if>
  		<if test="endTime != null">
  			AND OL.created_at &lt;= #{endTime}
  		</if>
  	</where> 
  </select>
  <select id="getOrderLogByOpenId" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
  	SELECT wx_openid AS wxOpenid,title AS title,payment_type AS paymentType FROM order_log WHERE wx_openid = #{wxOpenId}
  </select>
  <insert id="batchInsertOrderLog" parameterType="list">
  	INSERT INTO order_log (order_log_id,wx_openid,xiaoe_resource_id,xiaoe_order_id,xiaoe_user_id,price,title,order_state,payment_type,resource_type,created_at) VALUES 
  	<foreach collection="list" item="item"  separator=",">
  		(#{item.orderLogId},#{item.wxOpenid},#{item.xiaoeResourceId},#{item.xiaoeOrderId},#{item.xiaoeUserId},#{item.price},#{item.title},#{item.orderState},#{item.paymentType},#{item.resourceType},#{item.createdAt})
  	</foreach>
  </insert>
  <select id="getOrderLogListByXiaoEOrderId" parameterType="list" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from order_log
    where xiaoe_order_id IN
    <foreach collection="list" item="item" open="(" close=")" separator=",">
     #{item,jdbcType=VARCHAR}
    </foreach>
    
  </select>
</mapper>