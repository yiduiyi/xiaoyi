<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyi.manager.dao.ICourseDao">
  <resultMap id="BaseResultMap" type="com.xiaoyi.manager.domain.Course">
    <id column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="big_column_id" jdbcType="VARCHAR" property="bigColumnId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_type" jdbcType="TINYINT" property="courseType" />
    <result column="talk_number" jdbcType="INTEGER" property="talkNumber" />
    <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
    <result column="subjects_id" jdbcType="VARCHAR" property="subjectsId" />
    <result column="semester" jdbcType="INTEGER" property="semester" />
    <result column="h5_link" jdbcType="VARCHAR" property="h5Link" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    course_id, big_column_id, course_name, course_type, talk_number, grade_id, subjects_id, 
    semester, h5_link, create_time, update_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from course
    where course_id = #{courseId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiaoyi.manager.domain.Course">
    insert into course (course_id, big_column_id, course_name, 
      course_type, talk_number, grade_id, 
      subjects_id, semester, h5_link, 
      create_time, update_time, status
      )
    values (#{courseId,jdbcType=VARCHAR}, #{bigColumnId,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{courseType,jdbcType=TINYINT}, #{talkNumber,jdbcType=INTEGER}, #{gradeId,jdbcType=INTEGER}, 
      #{subjectsId,jdbcType=VARCHAR}, #{semester,jdbcType=INTEGER}, #{h5Link,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyi.manager.domain.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="bigColumnId != null">
        big_column_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="talkNumber != null">
        talk_number,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="subjectsId != null">
        subjects_id,
      </if>
      <if test="semester != null">
        semester,
      </if>
      <if test="h5Link != null">
        h5_link,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="bigColumnId != null">
        #{bigColumnId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=TINYINT},
      </if>
      <if test="talkNumber != null">
        #{talkNumber,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="subjectsId != null">
        #{subjectsId,jdbcType=VARCHAR},
      </if>
      <if test="semester != null">
        #{semester,jdbcType=INTEGER},
      </if>
      <if test="h5Link != null">
        #{h5Link,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.manager.domain.Course">
    update course
    <set>
      <if test="bigColumnId != null">
        big_column_id = #{bigColumnId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=TINYINT},
      </if>
      <if test="talkNumber != null">
        talk_number = #{talkNumber,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="subjectsId != null">
        subjects_id = #{subjectsId,jdbcType=VARCHAR},
      </if>
      <if test="semester != null">
        semester = #{semester,jdbcType=INTEGER},
      </if>
      <if test="h5Link != null">
        h5_link = #{h5Link,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyi.manager.domain.Course">
    update course
    set big_column_id = #{bigColumnId,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=TINYINT},
      talk_number = #{talkNumber,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      subjects_id = #{subjectsId,jdbcType=VARCHAR},
      semester = #{semester,jdbcType=INTEGER},
      h5_link = #{h5Link,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>
  <select id="getCourseList" parameterType="hashmap" resultType="com.alibaba.fastjson.JSONObject">
  	SELECT course_id AS courseId,create_time AS createTime,talk_number AS talkNumber,grade_id AS gradeId,
  	subjects_id AS subjectsId,semester AS semester,course_name AS courseName,h5_link AS h5Link,`status` AS status FROM course 
  	<where>
  		<if test="bigColumnId != null">
  			AND big_column_id = #{bigColumnId} 
  		</if>
  		<if test="talkNumber != null">
  			AND talk_number = #{talkNumber} 
  		</if>
  		<if test="gradeId != null">
  			AND grade_id = #{gradeId} 
  		</if>
  		<if test="subjectsId != null">
  			AND subjects_id = #{subjectsId} 
  		</if>
  		<if test="semester != null">
  			AND semester = #{semester} 
  		</if>
  		<if test="courseName != null">
  			AND course_name LIKE CONCAT('%',#{courseName},'%')
  		</if>
  		AND status = 0
  	</where>
  </select>
</mapper>