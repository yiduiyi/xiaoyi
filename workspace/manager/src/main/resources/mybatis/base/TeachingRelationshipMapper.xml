<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoyi.teacher.dao.ITeachingRelationshipDao">
	<resultMap id="BaseResultMap"
		type="com.xiaoyi.teacher.domain.TeachingRelationship">
		<id column="teaching_id" property="teachingId" jdbcType="VARCHAR" />
		<result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
		<result column="student_id" property="studentId" jdbcType="VARCHAR" />
		<result column="grade_id" property="gradeId" jdbcType="SMALLINT" />
		<result column="course_id" property="courseId" jdbcType="SMALLINT" />
		<result column="lesson_type" property="lessonType" jdbcType="SMALLINT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="SMALLINT" />
	</resultMap>
	<sql id="Base_Column_List">
		teaching_id, teacher_id, student_id, grade_id, course_id, lesson_type,
		create_time,
		update_time, status
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from teaching_relationship
		where teaching_id = #{teachingId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from teaching_relationship
		where teaching_id = #{teachingId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.xiaoyi.teacher.domain.TeachingRelationship">
		insert into teaching_relationship (teaching_id, teacher_id,
		student_id,
		grade_id, course_id, lesson_type,
		create_time, update_time, status
		)
		values (#{teachingId,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR},
		#{studentId,jdbcType=VARCHAR},
		#{gradeId,jdbcType=SMALLINT}, #{courseId,jdbcType=SMALLINT}, #{lessonType,jdbcType=SMALLINT},
		#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
		#{status,jdbcType=SMALLINT}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.xiaoyi.teacher.domain.TeachingRelationship">
		insert into teaching_relationship
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="teachingId != null">
				teaching_id,
			</if>
			<if test="teacherId != null">
				teacher_id,
			</if>
			<if test="studentId != null">
				student_id,
			</if>
			<if test="gradeId != null">
				grade_id,
			</if>
			<if test="courseId != null">
				course_id,
			</if>
			<if test="lessonType != null">
				lesson_type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="teachingId != null">
				#{teachingId,jdbcType=VARCHAR},
			</if>
			<if test="teacherId != null">
				#{teacherId,jdbcType=VARCHAR},
			</if>
			<if test="studentId != null">
				#{studentId,jdbcType=VARCHAR},
			</if>
			<if test="gradeId != null">
				#{gradeId,jdbcType=SMALLINT},
			</if>
			<if test="courseId != null">
				#{courseId,jdbcType=SMALLINT},
			</if>
			<if test="lessonType != null">
				#{lessonType,jdbcType=SMALLINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=SMALLINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.teacher.domain.TeachingRelationship">
		update teaching_relationship
		<set>
			<if test="teacherId != null">
				teacher_id = #{teacherId,jdbcType=VARCHAR},
			</if>
			<if test="studentId != null">
				student_id = #{studentId,jdbcType=VARCHAR},
			</if>
			<if test="gradeId != null">
				grade_id = #{gradeId,jdbcType=SMALLINT},
			</if>
			<if test="courseId != null">
				course_id = #{courseId,jdbcType=SMALLINT},
			</if>
			<if test="lessonType != null">
				lesson_type = #{lessonType,jdbcType=SMALLINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=SMALLINT},
			</if>
		</set>
		where teaching_id = #{teachingId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xiaoyi.teacher.domain.TeachingRelationship">
		update teaching_relationship
		set teacher_id = #{teacherId,jdbcType=VARCHAR},
		student_id = #{studentId,jdbcType=VARCHAR},
		grade_id = #{gradeId,jdbcType=SMALLINT},
		course_id = #{courseId,jdbcType=SMALLINT},
		lesson_type = #{lessonType,jdbcType=SMALLINT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=SMALLINT}
		where teaching_id = #{teachingId,jdbcType=VARCHAR}
	</update>
</mapper>