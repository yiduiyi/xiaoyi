<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoyi.manager.dao.IOrdersDao" >
  <!-- 根据orderId查询订单 -->
  <select id="selectOrderById" parameterType="java.lang.String" resultType="com.xiaoyi.manager.domain.Orders">
  	select *from orders where orderId=#{orderId}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="com.xiaoyi.manager.domain.OrdersKey" >
    delete from orders
    where lessonType = #{lessontype,jdbcType=INTEGER}
      and memberId = #{memberid,jdbcType=VARCHAR}
      and orderId = #{orderid,jdbcType=VARCHAR}
      and parentId = #{parentid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiaoyi.manager.domain.Orders" >
    insert into orders (lessonType, memberId, orderId, 
      parentId, createTime, purchaseNum,orderType,hasBook,teachingWay
      )
    values (#{lessontype,jdbcType=INTEGER}, #{memberid,jdbcType=VARCHAR}, #{orderid,jdbcType=VARCHAR}, 
      #{parentid,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{purchasenum}
      , #{orderType}, #{hasBook}, #{teachingWay})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyi.manager.domain.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lessontype != null" >
        lessonType,
      </if>
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="parentid != null" >
        parentId,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="purchasenum != null" >
        purchaseNum,
      </if>
      <if test="orderType != null" >
        orderType,
      </if>
      <if test="hasBook!= null" >
        hasBook,
      </if>
      <if test="singleLessonPrice!= null" >
        singleLessonPrice,
      </if>
      <if test="totalLessonPrice!= null" >
        totalLessonPrice,
      </if>
      <if test="actualPay!= null" >
        actualPay,
      </if>
      <if test="orderStatus!= null" >
        orderStatus,
      </if>
      <if test="teachingWay!= null" >
        teachingWay,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lessontype != null" >
        #{lessontype,jdbcType=INTEGER},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="purchasenum != null" >
        #{purchasenum},
      </if>
      <if test="orderType != null" >
        #{orderType},
      </if>
      <if test="hasBook!= null" >
       #{hasBook},
      </if>
      <if test="singleLessonPrice!= null" >
        #{singleLessonPrice},
      </if>
      <if test="totalLessonPrice!= null" >
        #{totalLessonPrice},
      </if>
      <if test="actualPay!= null" >
        #{actualPay},
      </if>
      <if test="orderStatus!= null" >
        #{orderStatus},
      </if>
      <if test="teachingWay!= null" >
        #{teachingWay},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.manager.domain.Orders" >
    update orders
    <set >
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="purchasenum != null" >
        purchaseNum = #{purchasenum},
      </if>
      <if test="orderType != null" >
        orderType=#{orderType},
      </if>
      <if test="hasBook!= null" >
        hasBook=#{hasBook},
      </if>
      <if test="orderStatus!=null">
      	orderStatus=#{orderStatus},
      </if>
    </set>
    where lessonType = #{lessontype,jdbcType=INTEGER}
      and memberId = #{memberid,jdbcType=VARCHAR}
      and orderId = #{orderid,jdbcType=VARCHAR}
      and parentId = #{parentid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyi.manager.domain.Orders" >
    update orders
    set createTime = #{createtime,jdbcType=TIMESTAMP},
      purchaseNum = #{purchasenum},
      orderType=#{orderType},
      hasBook=#{hasBook}
    where lessonType = #{lessontype,jdbcType=INTEGER}
      and memberId = #{memberid,jdbcType=VARCHAR}
      and orderId = #{orderid,jdbcType=VARCHAR}
      and parentId = #{parentid,jdbcType=VARCHAR}
  </update>
  
  <select id="getTotalTurnoverData" parameterType="java.util.Date" resultType="java.lang.Float">
  	SELECT SUM(actualPay) FROM orders 
		<where>
			orderType = 2 AND orderStatus = 0
			<if test="null != startTime">
				AND createTime &gt;= #{startTime}
			</if>
			<if test="null != endTime">
				AND createTime &lt;= #{endTime}
			</if>
		</where>
  </select>
  <select id="selectAllOrderIds" parameterType="java.util.Date" resultType="java.lang.String">
  	SELECT orderId FROM orders
	  	<where>
	  		orderType = 2 AND actualPay IS NOT NULL
	  		<if test="null != startTime">
				AND createTime &gt;= #{startTime}
			</if>
			<if test="null != endTime">
				AND createTime &lt;= #{endTime}
			</if>
  		</where>
  </select>

	<select id="getOrdersAndConsultantId"
		resultType="com.alibaba.fastjson.JSONObject">
		select o.orderId as orderId,o.lessonType as lessonType,o.parentId as
		parentId,o.memberId as memberId,o.teachingWay as
		teachingWay,cor.consultant_id as consultantId from orders o
		inner join consultant_order_r cor on o.orderId = cor.order_id
		where o.orderType = 2 and o.actualPay is not null
	</select>

  <select id="selectAllOrders" parameterType="java.util.Date" resultType="com.alibaba.fastjson.JSONObject">
  	select orderId as orderId,lessonType as lessonType,parentId as parentId,memberId as memberId,teachingWay as teachingWay from orders 
	  	<where>
	  		orderType = 2 and actualPay IS NOT NULL
	  		<if test="null != startTime">
				and createTime &gt;= #{startTime}
			</if>
			<if test="null != endTime">
				and createTime &lt;= #{endTime}
			</if>
  		</where>
  </select>
</mapper>