<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoyi.custom.dao.IStudentTaskDao">
	<resultMap id="BaseResultMap" type="com.xiaoyi.custom.domain.StudentTask">
		<id column="student_task_id" property="studentTaskId" jdbcType="VARCHAR" />
		<id column="video_course_id" property="videoCourseId" jdbcType="VARCHAR" />
		<result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
		<result column="student_id" property="studentId" jdbcType="VARCHAR" />
		<result column="task_type" property="taskType" jdbcType="TINYINT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="task_status" property="taskStatus" jdbcType="TINYINT" />
		<result column="notes" property="notes" jdbcType="VARCHAR" />
		<result column="grade_id" property="gradeId" jdbcType="SMALLINT" />
    	<result column="course_id" property="courseId" jdbcType="TINYINT" />
		<result/>
	</resultMap>
	<sql id="Base_Column_List">
		student_task_id, video_course_id, teacher_id, student_id,
		task_type, create_time, update_time
		task_status, notes, grade_id, course_id
	</sql>

	<!-- 查询已布置的视频课程列表（联合查询） -->
	<select id="selectAllByParams" resultType="com.alibaba.fastjson.JSONObject"
		parameterType="com.alibaba.fastjson.JSONObject" >
		SELECT ST.student_task_id AS studentTaskId, ST.video_course_id AS videoCourseId, VC.video_course_name AS videoCourseName, 
				ST.task_status AS videoCourseStatus, VC.video_course_type AS videoTaskType
		FROM student_task ST LEFT JOIN video_course VC
			ON ST.video_course_id=VC.video_course_id
		<where>
			<if test="teacherId!=null">
				ST.teacher_id = #{teacherId}
			</if>
			<if test="teacherId!=null">
				AND ST.student_id = #{studentId}
			</if>
			<if test="gradeId!=null">
				AND VC.grade_id = #{gradeId}
			</if>
			<if test="courseId!=null">
				AND VC.course_id = #{courseId}
			</if>
		</where>		
	</select>



	<!-- 查询已布置的视频课程列表（原始数据） -->
	<select id="selectByParams" resultMap="BaseResultMap"
		parameterType="com.alibaba.fastjson.JSONObject">
		select
		<include refid="Base_Column_List" />
		from student_task
		<where>
			<if test="teacherId != null">
				teacher_id = #{teacherId,jdbcType=VARCHAR}
			</if>
			<if test="studentId != null">
				and student_id = #{studentId,jdbcType=VARCHAR}
			</if>
			<if test="taskType != null">
				and task_type = #{taskType,jdbcType=TINYINT}
			</if>
		</where>
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="com.xiaoyi.custom.domain.StudentTaskKey">
		select
		<include refid="Base_Column_List" />
		from student_task
		where student_task_id =
		#{studentTaskId,jdbcType=VARCHAR}
		and video_course_id =
		#{videoCourseId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="com.xiaoyi.custom.domain.StudentTaskKey">
		delete from
		student_task
		where student_task_id = #{studentTaskId,jdbcType=VARCHAR}
		and video_course_id = #{videoCourseId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.xiaoyi.custom.domain.StudentTask">
		insert into student_task
		(student_task_id, video_course_id,
		teacher_id,
		student_id, task_type,
		create_time,
		task_status, notes)
		values
		(#{studentTaskId,jdbcType=VARCHAR},
		#{videoCourseId,jdbcType=VARCHAR},
		#{teacherId,jdbcType=VARCHAR},
		#{studentId,jdbcType=VARCHAR},
		#{taskType,jdbcType=TINYINT},
		#{createTime,jdbcType=TIMESTAMP},
		#{taskStatus,jdbcType=TINYINT}, #{notes,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.xiaoyi.custom.domain.StudentTask">
		insert into student_task
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="studentTaskId != null">
				student_task_id,
			</if>
			<if test="videoCourseId != null">
				video_course_id,
			</if>
			<if test="teacherId != null">
				teacher_id,
			</if>
			<if test="studentId != null">
				student_id,
			</if>
			<if test="taskType != null">
				task_type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="taskStatus != null">
				task_status,
			</if>
			<if test="notes != null">
				notes,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="studentTaskId != null">
				#{studentTaskId,jdbcType=VARCHAR},
			</if>
			<if test="videoCourseId != null">
				#{videoCourseId,jdbcType=VARCHAR},
			</if>
			<if test="teacherId != null">
				#{teacherId,jdbcType=VARCHAR},
			</if>
			<if test="studentId != null">
				#{studentId,jdbcType=VARCHAR},
			</if>
			<if test="taskType != null">
				#{taskType,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="taskStatus != null">
				#{taskStatus,jdbcType=TINYINT},
			</if>
			<if test="notes != null">
				#{notes,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.custom.domain.StudentTask">
		update student_task
		<set>
			<if test="teacherId != null">
				teacher_id = #{teacherId,jdbcType=VARCHAR},
			</if>
			<if test="studentId != null">
				student_id = #{studentId,jdbcType=VARCHAR},
			</if>
			<if test="taskType != null">
				task_type = #{taskType,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="taskStatus != null">
				task_status = #{taskStatus,jdbcType=TINYINT},
			</if>
			<if test="notes != null">
				notes = #{notes,jdbcType=VARCHAR},
			</if>
		</set>
		where student_task_id = #{studentTaskId,jdbcType=VARCHAR}
		and
		video_course_id = #{videoCourseId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xiaoyi.custom.domain.StudentTask">
		update
		student_task
		set teacher_id = #{teacherId,jdbcType=VARCHAR},
		student_id
		= #{studentId,jdbcType=VARCHAR},
		task_type =
		#{taskType,jdbcType=TINYINT},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		task_status =
		#{taskStatus,jdbcType=TINYINT},
		notes = #{notes,jdbcType=VARCHAR}
		where
		student_task_id = #{studentTaskId,jdbcType=VARCHAR}
		and video_course_id
		= #{videoCourseId,jdbcType=VARCHAR}
	</update>
</mapper>