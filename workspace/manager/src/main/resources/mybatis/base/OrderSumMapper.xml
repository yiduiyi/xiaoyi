<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoyi.manager.dao.IOrderSumDao" >
  <resultMap id="BaseResultMap" type="com.xiaoyi.manager.domain.OrderSum" >
    <id column="lessonType" property="lessontype" jdbcType="INTEGER" />
    <id column="memberId" property="memberid" jdbcType="VARCHAR" />
    <id column="orderId" property="orderid" jdbcType="VARCHAR" />
    <id column="parentId" property="parentid" jdbcType="VARCHAR" />
    <result column="purchaseTime" property="purchasetime" jdbcType="TIMESTAMP" />
    <result column="totalLessonNum" property="totallessonnum" />
    <result column="lessonLeftNum" property="lessonleftnum" />
    <result column="teachingIds" property="teachingids" jdbcType="VARCHAR" />
    <result column="teachingWay" property="teachingWay" />
  </resultMap>
  <sql id="Base_Column_List" >
    lessonType, memberId, orderId, parentId, purchaseTime, totalLessonNum, lessonLeftNum, 
    teachingIds, teachingWay
  </sql>
  
  <select id="selectOrderSumBatchByKey" resultMap="BaseResultMap" 
  			parameterType="java.util.List">
  	select 
  	<include refid="Base_Column_List" />
    from ordersum
    where
   	<foreach collection="list" item="item" separator="OR">
   	    <choose>
	    	<when test="item.orderid != null">
	    		orderId = #{orderid,jdbcType=VARCHAR}
	    	</when>
				<otherwise>	
	      		memberId = #{item.memberid,jdbcType=VARCHAR}
	      		and parentId = #{item.parentid,jdbcType=VARCHAR}
	    		<if test="item.lessontype!=null">
	    			and lessonType = #{item.lessontype,jdbcType=INTEGER}
	    		</if>
	    	</otherwise>
    	</choose>
   	</foreach>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.xiaoyi.manager.domain.OrderSumKey" >
    select 
    <include refid="Base_Column_List" />
    from ordersum
    where
    <choose>
    	<when test="orderid != null">
    		orderId = #{orderid,jdbcType=VARCHAR}
    	</when>
    	<otherwise>	
      		memberId = #{memberid,jdbcType=VARCHAR}
      		and parentId = #{parentid,jdbcType=VARCHAR}
    		<if test="lessontype!=null">
    			and lessonType = #{lessontype,jdbcType=INTEGER}
    		</if>
    		<if test="teachingWay!=null">
    			and teachingWay = #{teachingWay}
    		</if>
    	</otherwise>
    </choose>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.xiaoyi.manager.domain.OrderSumKey" >
    delete from ordersum
    where lessonType = #{lessontype,jdbcType=INTEGER}
      and memberId = #{memberid,jdbcType=VARCHAR}
      and orderId = #{orderid,jdbcType=VARCHAR}
      and parentId = #{parentid,jdbcType=VARCHAR}
      and teachingWay = #{teachingWay}
  </delete>
  <insert id="insert" parameterType="com.xiaoyi.manager.domain.OrderSum" >
    insert into ordersum (lessonType, memberId, orderId, 
      parentId, purchaseTime, totalLessonNum, 
      lessonLeftNum, teachingIds)
    values (#{lessontype,jdbcType=INTEGER}, #{memberid,jdbcType=VARCHAR}, #{orderid,jdbcType=VARCHAR}, 
      #{parentid,jdbcType=VARCHAR}, #{purchasetime,jdbcType=TIMESTAMP}, #{totallessonnum}, 
      #{lessonleftnum}, #{teachingids,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyi.manager.domain.OrderSum" >
    insert into ordersum
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lessontype != null" >
        lessonType,
      </if>
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="parentid != null" >
        parentId,
      </if>
      <if test="purchasetime != null" >
        purchaseTime,
      </if>
      <if test="totallessonnum != null" >
        totalLessonNum,
      </if>
      <if test="lessonleftnum != null" >
        lessonLeftNum,
      </if>
      <if test="teachingids != null" >
        teachingIds,
      </if>
      <if test="teachingWay != null" >
        teachingWay,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lessontype != null" >
        #{lessontype,jdbcType=INTEGER},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="purchasetime != null" >
        #{purchasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="totallessonnum != null" >
        #{totallessonnum},
      </if>
      <if test="lessonleftnum != null" >
        #{lessonleftnum},
      </if>
      <if test="teachingids != null" >
        #{teachingids,jdbcType=VARCHAR},
      </if>
      <if test="teachingWay != null" >
        #{teachingWay},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.manager.domain.OrderSum" >
    update ordersum
    <set >
      <if test="purchasetime != null" >
        purchaseTime = #{purchasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="totallessonnum != null" >
        totalLessonNum = #{totallessonnum},
      </if>
      <if test="lessonleftnum != null" >
        lessonLeftNum = #{lessonleftnum},
      </if>
      <if test="teachingids != null" >
        teachingIds = #{teachingids,jdbcType=VARCHAR},
      </if>
      <if test="teachingWay != null" >
        teachingWay = #{teachingWay},
      </if>
    </set>
    where 
    <choose>
    	<when test="orderid != null">
    		orderId = #{orderid,jdbcType=VARCHAR}
    	</when>
    	<otherwise>
    		lessonType = #{lessontype,jdbcType=INTEGER}
      			and memberId = #{memberid,jdbcType=VARCHAR}
      			and parentId = #{parentid,jdbcType=VARCHAR}
      			and teachingWay = #{teachingWay}
    	</otherwise>
    </choose>
    
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyi.manager.domain.OrderSum" >
    update ordersum
    set purchaseTime = #{purchasetime,jdbcType=TIMESTAMP},
      totalLessonNum = #{totallessonnum},
      lessonLeftNum = #{lessonleftnum},
      teachingIds = #{teachingids,jdbcType=VARCHAR}
    where lessonType = #{lessontype,jdbcType=INTEGER}
      and memberId = #{memberid,jdbcType=VARCHAR}
      and orderId = #{orderid,jdbcType=VARCHAR}
      and parentId = #{parentid,jdbcType=VARCHAR}
  </update>
  <select id="getClaimOrderList" parameterType="map" resultType="com.alibaba.fastjson.JSONObject">
  	SELECT P.openId AS openId,O.purchaseTime AS createTime,O.lessonType AS lessonType,O.teachingWay AS teachingWay,O.totalLessonNum AS totalLessonNum,S.`name` AS studentName,
  	P.parentName AS parentName,P.telNum AS telPhone FROM ordersum O 
  	INNER JOIN parents P ON O.parentId = P.parentId 
  	INNER JOIN student S ON O.memberId = S.memberId 
  		<where>
  			<if test="null != studentName">
  				AND S.`name` LIKE CONCAT('%',#{studentName},'%')
  			</if>
  			<if test="null != parentName">
  				AND P.parentName LIKE CONCAT('%',#{parentName},'%')
  			</if>
  			<if test="null != telPhone">
  				AND P.telNum = #{telPhone}
  			</if>
  			<if test="null != teachingType">
  				AND O.teachingWay = #{teachingType}
  			</if>
  		</where>
  </select>
</mapper>