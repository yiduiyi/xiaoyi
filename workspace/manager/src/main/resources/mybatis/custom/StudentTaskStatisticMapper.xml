<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyi.custom.dao.IStudentTaskStatisticDao">
  <resultMap id="BaseResultMap" type="com.xiaoyi.custom.domain.StudentTaskStatistic">
    <id column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <id column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="accomplished_count" jdbcType="SMALLINT" property="accomplishedCount" />
    <result column="unfinished_count" jdbcType="SMALLINT" property="unfinishedCount" />
    <result column="total_assigned_task" jdbcType="SMALLINT" property="totalAssignedTask" />
    <result column="accomplished_rate" jdbcType="SMALLINT" property="accomplishedRate" />
    <result column="grade_id" jdbcType="SMALLINT" property="gradeId" />
    <result column="course_id" jdbcType="TINYINT" property="courseId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    teacher_id, student_id, accomplished_count, unfinished_count, total_assigned_task, 
    accomplished_rate, grade_id, course_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.xiaoyi.custom.domain.StudentTaskStatisticKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_task_statistic
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
      and student_id = #{studentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.xiaoyi.custom.domain.StudentTaskStatisticKey">
    delete from student_task_statistic
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
      and student_id = #{studentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiaoyi.custom.domain.StudentTaskStatistic">
    insert into student_task_statistic (teacher_id, student_id, accomplished_count, 
      unfinished_count, total_assigned_task, accomplished_rate, 
      grade_id, course_id, create_time, 
      update_time)
    values (#{teacherId,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, #{accomplishedCount,jdbcType=SMALLINT}, 
      #{unfinishedCount,jdbcType=SMALLINT}, #{totalAssignedTask,jdbcType=SMALLINT}, #{accomplishedRate,jdbcType=SMALLINT}, 
      #{gradeId,jdbcType=SMALLINT}, #{courseId,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyi.custom.domain.StudentTaskStatistic">
    insert into student_task_statistic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="accomplishedCount != null">
        accomplished_count,
      </if>
      <if test="unfinishedCount != null">
        unfinished_count,
      </if>
      <if test="totalAssignedTask != null">
        total_assigned_task,
      </if>
      <if test="accomplishedRate != null">
        accomplished_rate,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="accomplishedCount != null">
        #{accomplishedCount,jdbcType=SMALLINT},
      </if>
      <if test="unfinishedCount != null">
        #{unfinishedCount,jdbcType=SMALLINT},
      </if>
      <if test="totalAssignedTask != null">
        #{totalAssignedTask,jdbcType=SMALLINT},
      </if>
      <if test="accomplishedRate != null">
        #{accomplishedRate,jdbcType=SMALLINT},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=SMALLINT},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.custom.domain.StudentTaskStatistic">
    update student_task_statistic
    <set>
      <if test="accomplishedCount != null">
        accomplished_count = #{accomplishedCount,jdbcType=SMALLINT},
      </if>
      <if test="unfinishedCount != null">
        unfinished_count = #{unfinishedCount,jdbcType=SMALLINT},
      </if>
      <if test="totalAssignedTask != null">
        total_assigned_task = #{totalAssignedTask,jdbcType=SMALLINT},
      </if>
      <if test="accomplishedRate != null">
        accomplished_rate = #{accomplishedRate,jdbcType=SMALLINT},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=SMALLINT},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
      and student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyi.custom.domain.StudentTaskStatistic">
    update student_task_statistic
    set accomplished_count = #{accomplishedCount,jdbcType=SMALLINT},
      unfinished_count = #{unfinishedCount,jdbcType=SMALLINT},
      total_assigned_task = #{totalAssignedTask,jdbcType=SMALLINT},
      accomplished_rate = #{accomplishedRate,jdbcType=SMALLINT},
      grade_id = #{gradeId,jdbcType=SMALLINT},
      course_id = #{courseId,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
      and student_id = #{studentId,jdbcType=VARCHAR}
  </update>
</mapper>