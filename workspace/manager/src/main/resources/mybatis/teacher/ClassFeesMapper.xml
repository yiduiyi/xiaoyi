<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyi.teacher.dao.IClassFeesDao">
  <resultMap id="BaseResultMap" type="com.xiaoyi.teacher.domain.ClassFees">
    <id column="class_fee_id" jdbcType="VARCHAR" property="classFeeId" />
    <result column="grade_id" jdbcType="VARCHAR" property="gradeId" />
    <result column="teaching_type" jdbcType="INTEGER" property="teachingType" />
    <result column="teaching_level" jdbcType="TINYINT" property="teachingLevel" />
    <result column="class_cost" jdbcType="REAL" property="classCost" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    class_fee_id, grade_id, teaching_type, teaching_level, class_cost, create_time, update_time, 
    status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from class_fees
    where class_fee_id = #{classFeeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from class_fees
    where class_fee_id = #{classFeeId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiaoyi.teacher.domain.ClassFees">
    insert into class_fees (class_fee_id, grade_id, teaching_type, 
      teaching_level, class_cost, create_time, 
      update_time, status)
    values (#{classFeeId,jdbcType=VARCHAR}, #{gradeId,jdbcType=VARCHAR}, #{teachingType,jdbcType=INTEGER}, 
      #{teachingLevel,jdbcType=TINYINT}, #{classCost,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyi.teacher.domain.ClassFees">
    insert into class_fees
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="classFeeId != null">
        class_fee_id,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="teachingType != null">
        teaching_type,
      </if>
      <if test="teachingLevel != null">
        teaching_level,
      </if>
      <if test="classCost != null">
        class_cost,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="classFeeId != null">
        #{classFeeId,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=VARCHAR},
      </if>
      <if test="teachingType != null">
        #{teachingType,jdbcType=INTEGER},
      </if>
      <if test="teachingLevel != null">
        #{teachingLevel,jdbcType=TINYINT},
      </if>
      <if test="classCost != null">
        #{classCost,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.teacher.domain.ClassFees">
    update class_fees
    <set>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=VARCHAR},
      </if>
      <if test="teachingType != null">
        teaching_type = #{teachingType,jdbcType=INTEGER},
      </if>
      <if test="teachingLevel != null">
        teaching_level = #{teachingLevel,jdbcType=TINYINT},
      </if>
      <if test="classCost != null">
        class_cost = #{classCost,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where class_fee_id = #{classFeeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyi.teacher.domain.ClassFees">
    update class_fees
    set grade_id = #{gradeId,jdbcType=VARCHAR},
      teaching_type = #{teachingType,jdbcType=INTEGER},
      teaching_level = #{teachingLevel,jdbcType=TINYINT},
      class_cost = #{classCost,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where class_fee_id = #{classFeeId,jdbcType=VARCHAR}
  </update>
  <select id="getClassFeesList" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
  	SELECT class_fee_id AS classFeeId, grade_id AS gradeId,teaching_type AS teachingType,teaching_level AS teachingLevel,
  	class_cost AS classCost FROM class_fees
  	<where>
  		<if test="gradeId != null">
  			AND grade_id = #{gradeId}
  		</if>
  		AND `status` = 0
  	</where>
  </select>
</mapper>