<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoyi.teacher.dao.ITeacherResumeDao" >
  <resultMap id="BaseResultMap" type="com.xiaoyi.teacher.domain.TeacherResume" >
    <id column="teacher_resume_id" property="teacherResumeId" jdbcType="VARCHAR" />
    <result column="taught_subject" property="taughtSubject" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xiaoyi.teacher.domain.TeacherResume" extends="BaseResultMap" >
    <result column="introduce" property="introduce" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    teacher_resume_id, taught_subject, create_time, update_time, status
  </sql>
  <sql id="Blob_Column_List" >
    introduce
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from teacher_resume
    where teacher_resume_id = #{teacherResumeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teacher_resume
    where teacher_resume_id = #{teacherResumeId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiaoyi.teacher.domain.TeacherResume" >
    insert into teacher_resume (teacher_resume_id, taught_subject, create_time, 
      update_time, status, introduce
      )
    values (#{teacherResumeId,jdbcType=VARCHAR}, #{taughtSubject,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{introduce,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyi.teacher.domain.TeacherResume" >
    insert into teacher_resume
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teacherResumeId != null" >
        teacher_resume_id,
      </if>
      <if test="taughtSubject != null" >
        taught_subject,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teacherResumeId != null" >
        #{teacherResumeId,jdbcType=VARCHAR},
      </if>
      <if test="taughtSubject != null" >
        #{taughtSubject,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.teacher.domain.TeacherResume" >
    update teacher_resume
    <set >
      <if test="taughtSubject != null" >
        taught_subject = #{taughtSubject,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where teacher_resume_id = #{teacherResumeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaoyi.teacher.domain.TeacherResume" >
    update teacher_resume
    set taught_subject = #{taughtSubject,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      introduce = #{introduce,jdbcType=LONGVARCHAR}
    where teacher_resume_id = #{teacherResumeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyi.teacher.domain.TeacherResume" >
    update teacher_resume
    set taught_subject = #{taughtSubject,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where teacher_resume_id = #{teacherResumeId,jdbcType=VARCHAR}
  </update>
</mapper>