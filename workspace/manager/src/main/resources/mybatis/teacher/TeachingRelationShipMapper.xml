<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyi.teacher.dao.ITeachingRelationShipDao">
  <resultMap id="BaseResultMap" type="com.xiaoyi.teacher.domain.TeachingRelationShip">
    <id column="teaching_id" jdbcType="VARCHAR" property="teachingId" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="grade_id" jdbcType="SMALLINT" property="gradeId" />
    <result column="course_id" jdbcType="SMALLINT" property="courseId" />
    <result column="lesson_type" jdbcType="SMALLINT" property="lessonType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    teaching_id, teacher_id, student_id, grade_id, course_id, lesson_type, create_time, 
    update_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teaching_relationship
    where teaching_id = #{teachingId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from teaching_relationship
    where teaching_id = #{teachingId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiaoyi.teacher.domain.TeachingRelationShip">
    insert into teaching_relationship (teaching_id, teacher_id, student_id, 
      grade_id, course_id, lesson_type, 
      create_time, update_time, status
      )
    values (#{teachingId,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, 
      #{gradeId,jdbcType=SMALLINT}, #{courseId,jdbcType=SMALLINT}, #{lessonType,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyi.teacher.domain.TeachingRelationShip">
    insert into teaching_relationship
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teachingId != null">
        teaching_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="lessonType != null">
        lesson_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teachingId != null">
        #{teachingId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=SMALLINT},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=SMALLINT},
      </if>
      <if test="lessonType != null">
        #{lessonType,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.teacher.domain.TeachingRelationShip">
    update teaching_relationship
    <set>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=SMALLINT},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=SMALLINT},
      </if>
      <if test="lessonType != null">
        lesson_type = #{lessonType,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
    </set>
    where teaching_id = #{teachingId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyi.teacher.domain.TeachingRelationShip">
    update teaching_relationship
    set teacher_id = #{teacherId,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=VARCHAR},
      grade_id = #{gradeId,jdbcType=SMALLINT},
      course_id = #{courseId,jdbcType=SMALLINT},
      lesson_type = #{lessonType,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT}
    where teaching_id = #{teachingId,jdbcType=VARCHAR}
  </update>
</mapper>