<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoyi.teacher.dao.ITH5PlateDao">
	<resultMap id="BaseResultMap" type="com.xiaoyi.manager.domain.Teacher">
		<id column="teacherId" property="teacherid" jdbcType="VARCHAR" />
		<result column="teacherName" property="teachername" jdbcType="VARCHAR" />
		<result column="picId" property="picid" jdbcType="VARCHAR" />
		<result column="schoolId" property="schoolid" jdbcType="VARCHAR" />
		<result column="gradeId" property="gradeid" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="BIT" />
		<result column="education" property="education" jdbcType="TINYINT" />
		<result column="telNumber" property="telnumber" jdbcType="VARCHAR" />
		<result column="teachingLevel" property="teachinglevel"
			jdbcType="TINYINT" />
		<result column="regDate" property="regdate" jdbcType="TIMESTAMP" />
		<result column="notes" property="notes" jdbcType="VARCHAR" />
		<result column="openId" property="openId" jdbcType="VARCHAR" />
		<result column="signed" property="signed" jdbcType="BIT" />
		<result column="good_at" property="goodAt" jdbcType="VARCHAR" />
		<result column="standby_tel_number" property="standbyTelNumber" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		teacherId, teacherName, picId, schoolId, gradeId, sex, education, telNumber,
		teachingLevel,
		regDate, notes, openId, signed,good_at,standby_tel_number
	</sql>
	<select id="selectTeacherByOpenId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from teacher
		where openId = #{openId,jdbcType=VARCHAR}
	</select>
	<select id="selectTeacherByTeacherId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from teacher
		where teacherId = #{teacherId,jdbcType=VARCHAR}
	</select>
	<select id="selectTeacherByParams" resultMap="BaseResultMap"
		parameterType="hashmap">
		select
		<include refid="Base_Column_List" />
		from teacher
		where teacherName = #{teacherName,jdbcType=VARCHAR} 
				AND telNumber = #{telNumber,jdbcType=VARCHAR}
	</select>

	<update id="updateTeacherByOpenId" parameterType="com.xiaoyi.manager.domain.Teacher">
		update teacher
		<set>
			<if test="teachername != null">
				teacherName = #{teachername,jdbcType=VARCHAR},
			</if>
			<if test="picid != null">
				picId = #{picid,jdbcType=VARCHAR},
			</if>
			<if test="schoolid != null">
				schoolId = #{schoolid,jdbcType=VARCHAR},
			</if>
			<if test="gradeid != null">
				gradeId = #{gradeid,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=BIT},
			</if>
			<if test="education != null">
				education = #{education,jdbcType=TINYINT},
			</if>
			<if test="telnumber != null">
				telNumber = #{telnumber,jdbcType=VARCHAR},
			</if>
			<if test="teachinglevel != null">
				teachingLevel = #{teachinglevel,jdbcType=TINYINT},
			</if>
			<if test="regdate != null">
				regDate = #{regdate,jdbcType=TIMESTAMP},
			</if>
			<if test="notes != null">
				notes = #{notes,jdbcType=VARCHAR},
			</if>
			<if test="openId != null">
				openId = #{openId,jdbcType=VARCHAR},
			</if>
			<if test="signed != null">
				signed = #{signed,jdbcType=VARCHAR},
			</if>
		</set>
		where openId = #{openId,jdbcType=VARCHAR}
	</update>
 	
 	<update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.manager.domain.Teacher" >
    update teacher
    <set >
      <if test="teachername != null" >
        teacherName = #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="picid != null" >
        picId = #{picid,jdbcType=VARCHAR},
      </if>
      <if test="schoolid != null" >
        schoolId = #{schoolid,jdbcType=VARCHAR},
      </if>
      <if test="gradeid != null" >
        gradeId = #{gradeid,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=TINYINT},
      </if>
      <if test="telnumber != null" >
        telNumber = #{telnumber,jdbcType=VARCHAR},
      </if>
      <if test="teachinglevel != null" >
        teachingLevel = #{teachinglevel,jdbcType=TINYINT},
      </if>
      <if test="regdate != null" >
        regDate = #{regdate,jdbcType=TIMESTAMP},
      </if>
      <if test="notes != null" >
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        openId = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="signed != null" >
        signed = #{signed,jdbcType=BIT},
      </if>
      <if test="goodAt != null" >
        good_at = #{goodAt,jdbcType=VARCHAR},
      </if>
      <if test="standbyTelNumber != null" >
        standby_tel_number = #{standbyTelNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where teacherId = #{teacherid,jdbcType=VARCHAR}
  </update>
  
 	<!-- 查询老师绑定的任教关系 -->
 	<select id="selectTeachingRelationships" parameterType="java.lang.String" 
 		resultType="com.alibaba.fastjson.JSONObject">
 		SELECT a.orderId, a.teachingId, c.parentName, c.telNum, IFNULL(s.`name`,"") as studentName,
 			b.lessonLeftNum as leftLessons, b.totalLessonNum as totalPurchasedLessons
		FROM order_teaching_r a 
			LEFT JOIN ordersum b ON a.orderId=b.orderId
			LEFT JOIN parents c ON a.parentId=c.parentId
			LEFT JOIN student s ON a.memberId=s.memberId
		WHERE teacherId=#{teacherId}
		GROUP BY a.orderId
 	</select>
 	
 	<!-- 获取历史课时提交记录 -->
 	<select id="selectHistoryTeachingRecords" parameterType="com.alibaba.fastjson.JSONObject" 
 		resultType="com.alibaba.fastjson.JSONObject">
 		SELECT startTime,endTime,teachingNum,teachingDate,feedback
		FROM teachingrecord 
		WHERE teachingId=#{teachingId}
			AND DATE_FORMAT(teachingDate,"%Y-%m")=#{queryMonth}
 	</select>
 	
 	<select id="getAllRemindTeacherList" resultType="com.alibaba.fastjson.JSONObject">
 		SELECT openId AS openId FROM teacher T LEFT JOIN teacher_space_set TSS ON T.teacherId = TSS.teacherId WHERE TSS.is_remind = 1 AND TSS.`status` = 0
 	</select>
 	<select id="getMonthTeacherClassFeeRank" parameterType="java.util.Date" resultType="com.alibaba.fastjson.JSONObject">
 		SELECT T.teacherName AS teacherName,SUM(L.actualPay) AS classFee FROM lessontrade L 
 		LEFT JOIN teacher T ON L.teacherId = T.teacherId 
 		WHERE date_format(L.applyTime, '%Y %m') = date_format(#{date},'%Y %m') GROUP BY L.teacherId ORDER BY classFee DESC limit 0,3
 	</select>
 	
 	<select id="getAllTeacherList" resultType="com.alibaba.fastjson.JSONObject">
 		
 	</select>
</mapper>